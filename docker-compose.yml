services:
  db:
    image: postgres:latest
    container_name: air_quality_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"  # Mapeamento dinâmico
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: air_quality_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}   
    ports:
      - "5050:80" # Acessível em http://localhost:5050
    volumes:
      - pgadmin-data:/var/lib/pgadmin  # Persistência das configurações
    depends_on:
      db:
        condition: service_healthy  # Só inicia após o DB estar saudável
      
  airflow:
    image: apache/airflow:latest
    container_name: air_quality_airflow
    depends_on:
      - db
    env_file:
      - .env 
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@db:5432/airflow_metadata
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      #PYTHONPATH: /opt 
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - .:/opt/ 
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
      airflow users create --username usuario --firstname Novo --lastname Usuario --role Admin --email usuario@example.com --password senha &&
      (airflow webserver & airflow scheduler)
      "

volumes:
  pgdata: 
  pgadmin-data: